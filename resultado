USE ARBOR_CAFETERIA
-- Criar Tabela Dimensão Produto
CREATE TABLE D_PRODUTO
(
	ID_PRODUTO INT,
	NM_PRODUTO VARCHAR(50),
	NM_CATEGORIA VARCHAR (50),
	PRECO NUMERIC (12,2),
	CUSTO NUMERIC (12,2),
	DT_CARGA DATETIME,
	DT_UPDATE DATETIME

	CONSTRAINT UN_D_PRODUTO UNIQUE (ID_PRODUTO),
	CONSTRAINT PK_D_PRODUTO PRIMARY KEY (ID_PRODUTO)
);
-- Inserir informações na D_produto
BEGIN TRAN
INSERT INTO D_PRODUTO
SELECT
	ID_PRODUTO,
	UPPER (PRODUTO),
	CATEGORIA,
    AVG (VENDA/QTD),
	AVG (CUSTO),
	GETDATE(),
	GETDATE()
FROM Venda22
GROUP BY ID_PRODUTO, PRODUTO,CATEGORIA
COMMIT	
-- Ajustar nomes das categorias
BEGIN TRAN
UPDATE D_PRODUTO
SET DT_UPDATE = GETDATE(),
NM_CATEGORIA = CASE 
WHEN NM_CATEGORIA = 'CH?' THEN 'CHA'
WHEN NM_CATEGORIA = 'N?O ALCOOLICO' THEN 'NAO ALCOOLICO'
WHEN NM_CATEGORIA = 'N?O ALIMENTOS 'THEN 'NAO ALIMENTOS'
WHEN NM_CATEGORIA = 'PACOTE CAF?' THEN 'PACOTE CAFE'
WHEN NM_CATEGORIA = 'DRINK COM CAF?' THEN 'DRINK COM CAFE'
ELSE NM_CATEGORIA 
END
WHERE
NM_CATEGORIA IN ('CH?','N?O ALCOOLICO','N?O ALIMENTOS ', 'PACOTE CAF?','DRINK COM CAF?')
COMMIT

-- Ajustar nomes dos produtos

BEGIN TRAN
UPDATE D_PRODUTO
SET DT_UPDATE = GETDATE(),
NM_PRODUTO = CASE 
WHEN NM_PRODUTO = 'PACOTE DE CH?' THEN 'PACOTE DE CHA'
WHEN NM_PRODUTO = 'P?O DE QUEIJO?' THEN 'PAO DE QUEIJO'
WHEN NM_PRODUTO = 'P?O DE QUEIJO ARTESANAL' THEN 'PAO DE QUEIJO ARTESANAL'
WHEN NM_PRODUTO = 'P?O FERMENTA??O NATURAL' THEN 'PAO FERMENTACAO NATURAL'
WHEN NM_PRODUTO = 'CAF? PURO' THEN 'CAFE PURO'
ELSE NM_PRODUTO
END
WHERE 
NM_PRODUTO IN ('PACOTE DE CH?','P?O DE QUEIJO?','P?O DE QUEIJO ARTESANAL','P?O FERMENTA??O NATURAL','CAF? PURO')
COMMIT

BEGIN TRAN
UPDATE D_PRODUTO
SET NM_PRODUTO = UPPER(NM_PRODUTO)
COMMIT

-- Criar dimensão tempo
CREATE TABLE D_TEMPO
(
	ID_MES INT NOT NULL,
	MES VARCHAR(10),
	TRIMESTRE INT,
	SEMESTRE INT,
	DT_CARGA DATETIME,
	DT_UPDATE DATETIME,

	CONSTRAINT UN_D_TEMPO UNIQUE (ID_MES),
	CONSTRAINT PK_D_TEMPO PRIMARY KEY (ID_MES)
);
-- Criar hierarquia de tempo (trimestres e semestres)
BEGIN TRAN
INSERT INTO D_TEMPO
SELECT
	ID_MES,
	UPPER (MES),
	CASE
		WHEN ID_MES BETWEEN 1 AND 3 THEN 1
		WHEN ID_MES BETWEEN 4 AND 6 THEN 2
		WHEN ID_MES BETWEEN 7 AND 9 THEN 3
		WHEN ID_MES BETWEEN 9 AND 12 THEN 4
		ELSE 0
		END ,
	CASE
		WHEN ID_MES BETWEEN 1 AND 6 THEN 1
		WHEN ID_MES BETWEEN 7 AND 12 THEN 2
		ELSE 0
		END ,
	GETDATE() ,
	GETDATE()
FROM Venda22
		GROUP BY ID_MES, MES
		ORDER BY ID_MES
COMMIT

-- Criar tabela T_Fato
CREATE TABLE T_FATO
(
	ID_MES INT,
	ID_PRODUTO INT,
	QTD_CAFE NUMERIC (10,2),
	QTD NUMERIC (10,2),
	VENDA NUMERIC (10,2),
	DT_CARGA DATETIME,
	DT_UPDATE DATETIME
	CONSTRAINT PK_M_P PRIMARY KEY (ID_MES,ID_PRODUTO),
	CONSTRAINT FK_M FOREIGN KEY (ID_MES) REFERENCES D_TEMPO(ID_MES),
	CONSTRAINT FK_P FOREIGN KEY (ID_PRODUTO)REFERENCES D_PRODUTO (ID_PRODUTO)
);
-- Inserir informações na T_Fato
BEGIN TRAN
INSERT INTO T_FATO
SELECT
	Venda22.ID_MES,
	Venda22.ID_PRODUTO,
	QTD_CAFE_G,
	QTD,
	VENDA,
	GETDATE(),
	GETDATE()
FROM Venda22
COMMIT

-- Criar View
	CREATE VIEW VIEW2022 AS
	SELECT
	D_PRODUTO.NM_CATEGORIA,
	D_PRODUTO.NM_PRODUTO,
	D_TEMPO.ID_MES,
	D_TEMPO.MES,
	D_TEMPO.SEMESTRE,
	T_FATO.VENDA,
	T_FATO.QTD,
	(T_FATO.QTD_CAFE * T_FATO.QTD) AS QTD_CAFE,
	((D_PRODUTO.PRECO - D_PRODUTO.CUSTO)/D_PRODUTO.PRECO)*100 AS MARGEM
	FROM T_FATO
	JOIN D_TEMPO ON T_FATO.ID_MES=D_TEMPO.ID_MES
	JOIN D_PRODUTO ON T_FATO.ID_PRODUTO = D_PRODUTO.ID_PRODUTO
